[{"/Users/sairanganathan/Desktop/netflix-clone/src/index.js":"1","/Users/sairanganathan/Desktop/netflix-clone/src/App.js":"2","/Users/sairanganathan/Desktop/netflix-clone/src/reportWebVitals.js":"3","/Users/sairanganathan/Desktop/netflix-clone/src/modules/SearchSynopsis/index.js":"4","/Users/sairanganathan/Desktop/netflix-clone/src/modules/Row/index.js":"5","/Users/sairanganathan/Desktop/netflix-clone/src/requests.js":"6","/Users/sairanganathan/Desktop/netflix-clone/src/axios.js":"7","/Users/sairanganathan/Desktop/netflix-clone/src/modules/Banner/index.js":"8","/Users/sairanganathan/Desktop/netflix-clone/src/modules/NavBar/index.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1000,"mtime":1608863534954,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2137,"mtime":1608376541146,"results":"14","hashOfConfig":"11"},{"size":1899,"mtime":1608495750443,"results":"15","hashOfConfig":"11"},{"size":862,"mtime":1608510922797,"results":"16","hashOfConfig":"11"},{"size":193,"mtime":1608453767837,"results":"17","hashOfConfig":"11"},{"size":1956,"mtime":1608506824573,"results":"18","hashOfConfig":"11"},{"size":1421,"mtime":1608509769111,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"mygvuo",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/sairanganathan/Desktop/netflix-clone/src/index.js",[],["42","43"],"/Users/sairanganathan/Desktop/netflix-clone/src/App.js",["44","45"],"/Users/sairanganathan/Desktop/netflix-clone/src/reportWebVitals.js",[],"/Users/sairanganathan/Desktop/netflix-clone/src/modules/SearchSynopsis/index.js",[],"/Users/sairanganathan/Desktop/netflix-clone/src/modules/Row/index.js",["46","47","48"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"../../axios.js\";\nimport requests from \"../../requests.js\";\nimport \"../Row/Styles/index.scss\";\n\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  // functional component set state with hooks in react\n  const [movies, setMovies] = useState([]);\n  const [movieTitle, setMovieTitle] = useState([]);\n\n  // A snippet of code which runs based on a specific condition/variable\n  useEffect(() => {\n    // we want everything like this to load right when the row loads itself\n    // in our app for db tools, we used async function because we want that data to show up after\n\n    // if [], run once when the row loads and dont run again\n    // if we put [movies], it will run again whenever movies changes\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n\n  return (\n    <div className=\"Row\">\n      <h2>{title}</h2>\n\n      <div className=\"Row_posters\">\n        {movies.map(movie => (\n          <div className={`Row_posters_single-poster ${!isLargeRow && \"Row_posters_single-posterSmall\"}`}>\n            <img\n              key={movie.id}\n              //className={`Row_posters_single-poster ${!isLargeRow && \"Row_posters_single-posterSmall\"}`}\n              src={`${baseUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n              //src={baseUrl + movie.poster_path}\n              alt={movie.name}\n            />\n            <div class=\"overlay\">\n              <div class=\"text\">{!isLargeRow ? movie.name : \"\"}</div>\n              <div class=\"text\">{!isLargeRow ? movie.original_title : \"\"}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* container -> posters */}\n    </div>\n  );\n}\n\nexport default Row;\n","/Users/sairanganathan/Desktop/netflix-clone/src/requests.js",[],"/Users/sairanganathan/Desktop/netflix-clone/src/axios.js",[],"/Users/sairanganathan/Desktop/netflix-clone/src/modules/Banner/index.js",["49","50"],"import \"./Styles/index.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from '../../axios.js';\nimport request from '../../requests.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\nimport NavBar from '../NavBar/index.js';\nfunction Banner() {\n    const [movie, setMovie] = useState([]);\n    const [movieDesc, setMovieDesc] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const myRequest = await axios.get(request.fetchNetflixOriginals);\n            setMovie(\n                myRequest.data.results[\n                Math.floor(Math.random() * myRequest.data.results.length)\n                ]\n            );\n            return myRequest;\n        }\n\n        fetchData();\n    }, []);\n\n    console.log(movie);\n\n    function truncate(str, n) {\n        return str.length > n ? str.substr(0, n - 1) + \"...\" : str;\n    }\n\n    return (\n        <header className=\"Banner\" style={{\n            backgroundSize: \"cover\", backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n            //backgroundPosition: 'center'\n        }}>\n            <NavBar />\n            <div className=\"Banner_contents\">\n                <div className=\"Banner_contents_movieTitle\">{movie.name}</div>\n                <div className=\"Banner_contents_movieDescription\">{movie.overview ? truncate(movie.overview, 400) : \"\"}</div>\n                <div className=\"Banner_contents_buttons\">\n                    <button className=\"Banner_contents_buttons_button\"><FontAwesomeIcon icon={faPlay} id=\"icon_play\" /> Play</button>\n                    <button className=\"Banner_contents_buttons_button\">My List</button>\n                </div>\n                <p className=\"Banner_contents_description\"> </p>\n            </div>\n            <div className=\"Banner--fadeBottom\"></div>\n        </header>\n    )\n}\n\nexport default Banner;","/Users/sairanganathan/Desktop/netflix-clone/src/modules/NavBar/index.js",["51"],"import react from 'react';\nimport '../NavBar/Styles/index.scss';\nimport ProfilePNG from '../../Pictures/profile.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faGift, faBell } from '@fortawesome/free-solid-svg-icons';\n\nfunction NavBar() {\n\n    function handleClick() {\n        window.location.assign('https://www.Netflix.com/');\n    }\n\n    return (\n        <div className=\"NavBar\">\n            <div className=\"NavBar_left\">\n                <img\n                    className=\"NavBar_logo\"\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n                    alt=\"Netflix Logo\" />\n                <p onClick={handleClick}> Home </p>\n                <p> TV </p>\n                <p> Movies </p>\n                <p> New</p>\n                <p> My List</p>\n            </div>\n\n            <div className=\"NavBar_right\">\n                <FontAwesomeIcon className=\"NavBar_right_icon\" icon={faSearch} id=\"icon_search\" />\n                <FontAwesomeIcon className=\"NavBar_right_icon\" icon={faGift} id=\"icon_gift\" />\n                <FontAwesomeIcon className=\"NavBar_right_icon\" icon={faBell} id=\"icon_bell\" />\n                <img\n                    className=\"NavBar_avatar\"\n                    src={ProfilePNG}\n                    alt=\"avatar\"\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar; ",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":22},{"ruleId":"56","severity":1,"message":"60","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":14},{"ruleId":"56","severity":1,"message":"61","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":16},{"ruleId":"56","severity":1,"message":"62","line":10,"column":10,"nodeType":"58","messageId":"59","endLine":10,"endColumn":20},{"ruleId":"56","severity":1,"message":"63","line":10,"column":22,"nodeType":"58","messageId":"59","endLine":10,"endColumn":35},{"ruleId":"56","severity":1,"message":"64","line":10,"column":12,"nodeType":"58","messageId":"59","endLine":10,"endColumn":21},{"ruleId":"56","severity":1,"message":"65","line":10,"column":23,"nodeType":"58","messageId":"59","endLine":10,"endColumn":35},{"ruleId":"56","severity":1,"message":"66","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":13},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'SearchSynopsis' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'requests' is defined but never used.","'movieTitle' is assigned a value but never used.","'setMovieTitle' is assigned a value but never used.","'movieDesc' is assigned a value but never used.","'setMovieDesc' is assigned a value but never used.","'react' is defined but never used.","no-global-assign","no-unsafe-negation"]